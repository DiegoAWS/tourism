// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tourism.Models;

namespace tourism.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210215062224_AuthAdded")]
    partial class AuthAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("tourism.Models.Excursion", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Packageid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("destination")
                        .HasColumnType("TEXT");

                    b.Property<string>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("idSalesMan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("infoDestination")
                        .HasColumnType("TEXT");

                    b.Property<string>("nameSalesMan")
                        .HasColumnType("TEXT");

                    b.Property<string>("offers")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<string>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Packageid");

                    b.ToTable("Excursion");
                });

            modelBuilder.Entity("tourism.Models.Hotel", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Packageid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("contact")
                        .HasColumnType("TEXT");

                    b.Property<string>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("idSalesMan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nameSalesMan")
                        .HasColumnType("TEXT");

                    b.Property<string>("placement")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<string>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Packageid");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("tourism.Models.Package", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("tourism.Models.Sale", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Packageid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("agency")
                        .HasColumnType("TEXT");

                    b.Property<int>("amountPeopol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("client")
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .HasColumnType("TEXT");

                    b.Property<string>("dateSale")
                        .HasColumnType("TEXT");

                    b.Property<string>("descCoupon")
                        .HasColumnType("TEXT");

                    b.Property<int>("descPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("finalPrive")
                        .HasColumnType("TEXT");

                    b.Property<long>("idSalesMan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nameSalesMan")
                        .HasColumnType("TEXT");

                    b.Property<string>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Packageid");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("tourism.Models.Transfer", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Packageid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("endPlace")
                        .HasColumnType("TEXT");

                    b.Property<string>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("idSalesMan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nameSalesMan")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("price")
                        .HasColumnType("TEXT");

                    b.Property<string>("startPlace")
                        .HasColumnType("TEXT");

                    b.Property<string>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("stops")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Packageid");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("tourism.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ROLE")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("tourism.Models.Excursion", b =>
                {
                    b.HasOne("tourism.Models.Package", null)
                        .WithMany("Excursions")
                        .HasForeignKey("Packageid");
                });

            modelBuilder.Entity("tourism.Models.Hotel", b =>
                {
                    b.HasOne("tourism.Models.Package", null)
                        .WithMany("Hotels")
                        .HasForeignKey("Packageid");
                });

            modelBuilder.Entity("tourism.Models.Sale", b =>
                {
                    b.HasOne("tourism.Models.Package", "Package")
                        .WithMany()
                        .HasForeignKey("Packageid");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("tourism.Models.Transfer", b =>
                {
                    b.HasOne("tourism.Models.Package", null)
                        .WithMany("Transfers")
                        .HasForeignKey("Packageid");
                });

            modelBuilder.Entity("tourism.Models.Package", b =>
                {
                    b.Navigation("Excursions");

                    b.Navigation("Hotels");

                    b.Navigation("Transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
